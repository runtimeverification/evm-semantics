requires "edsl.md"

module Storage-CONTRACT
    imports public EDSL
    
    syntax Contract ::= S2KStorageContract
    
    syntax S2KStorageContract ::= "S2KStorage" [symbol(contract_Storage)]
    
    rule  ( #binRuntime ( S2KStorage ) => #parseByteStack ( "" ) )
      
    
    syntax Field ::= StorageField
    
    syntax StorageField ::= "myBool" [symbol(field_Storage_myBool)]
    
    syntax StorageField ::= "myUint8" [symbol(field_Storage_myUint8)]
    
    syntax StorageField ::= "myUint16" [symbol(field_Storage_myUint16)]
    
    syntax StorageField ::= "myUint24" [symbol(field_Storage_myUint24)]
    
    syntax StorageField ::= "myUint32" [symbol(field_Storage_myUint32)]
    
    syntax StorageField ::= "myUint40" [symbol(field_Storage_myUint40)]
    
    syntax StorageField ::= "myUint48" [symbol(field_Storage_myUint48)]
    
    syntax StorageField ::= "myUint56" [symbol(field_Storage_myUint56)]
    
    syntax StorageField ::= "myUint64" [symbol(field_Storage_myUint64)]
    
    syntax StorageField ::= "myUint72" [symbol(field_Storage_myUint72)]
    
    syntax StorageField ::= "myUint80" [symbol(field_Storage_myUint80)]
    
    syntax StorageField ::= "myUint88" [symbol(field_Storage_myUint88)]
    
    syntax StorageField ::= "myUint96" [symbol(field_Storage_myUint96)]
    
    syntax StorageField ::= "myUint104" [symbol(field_Storage_myUint104)]
    
    syntax StorageField ::= "myUint112" [symbol(field_Storage_myUint112)]
    
    syntax StorageField ::= "myUint120" [symbol(field_Storage_myUint120)]
    
    syntax StorageField ::= "myUint128" [symbol(field_Storage_myUint128)]
    
    syntax StorageField ::= "myUint136" [symbol(field_Storage_myUint136)]
    
    syntax StorageField ::= "myUint144" [symbol(field_Storage_myUint144)]
    
    syntax StorageField ::= "myUint152" [symbol(field_Storage_myUint152)]
    
    syntax StorageField ::= "myUint160" [symbol(field_Storage_myUint160)]
    
    syntax StorageField ::= "myUint168" [symbol(field_Storage_myUint168)]
    
    syntax StorageField ::= "myUint176" [symbol(field_Storage_myUint176)]
    
    syntax StorageField ::= "myUint184" [symbol(field_Storage_myUint184)]
    
    syntax StorageField ::= "myUint192" [symbol(field_Storage_myUint192)]
    
    syntax StorageField ::= "myUint200" [symbol(field_Storage_myUint200)]
    
    syntax StorageField ::= "myUint208" [symbol(field_Storage_myUint208)]
    
    syntax StorageField ::= "myUint216" [symbol(field_Storage_myUint216)]
    
    syntax StorageField ::= "myUint224" [symbol(field_Storage_myUint224)]
    
    syntax StorageField ::= "myUint232" [symbol(field_Storage_myUint232)]
    
    syntax StorageField ::= "myUint240" [symbol(field_Storage_myUint240)]
    
    syntax StorageField ::= "myUint248" [symbol(field_Storage_myUint248)]
    
    syntax StorageField ::= "myUint256" [symbol(field_Storage_myUint256)]
    
    syntax StorageField ::= "myInt8" [symbol(field_Storage_myInt8)]
    
    syntax StorageField ::= "myInt16" [symbol(field_Storage_myInt16)]
    
    syntax StorageField ::= "myInt24" [symbol(field_Storage_myInt24)]
    
    syntax StorageField ::= "myInt32" [symbol(field_Storage_myInt32)]
    
    syntax StorageField ::= "myInt40" [symbol(field_Storage_myInt40)]
    
    syntax StorageField ::= "myInt48" [symbol(field_Storage_myInt48)]
    
    syntax StorageField ::= "myInt56" [symbol(field_Storage_myInt56)]
    
    syntax StorageField ::= "myInt64" [symbol(field_Storage_myInt64)]
    
    syntax StorageField ::= "myInt72" [symbol(field_Storage_myInt72)]
    
    syntax StorageField ::= "myInt80" [symbol(field_Storage_myInt80)]
    
    syntax StorageField ::= "myInt88" [symbol(field_Storage_myInt88)]
    
    syntax StorageField ::= "myInt96" [symbol(field_Storage_myInt96)]
    
    syntax StorageField ::= "myInt104" [symbol(field_Storage_myInt104)]
    
    syntax StorageField ::= "myInt112" [symbol(field_Storage_myInt112)]
    
    syntax StorageField ::= "myInt120" [symbol(field_Storage_myInt120)]
    
    syntax StorageField ::= "myInt128" [symbol(field_Storage_myInt128)]
    
    syntax StorageField ::= "myInt136" [symbol(field_Storage_myInt136)]
    
    syntax StorageField ::= "myInt144" [symbol(field_Storage_myInt144)]
    
    syntax StorageField ::= "myInt152" [symbol(field_Storage_myInt152)]
    
    syntax StorageField ::= "myInt160" [symbol(field_Storage_myInt160)]
    
    syntax StorageField ::= "myInt168" [symbol(field_Storage_myInt168)]
    
    syntax StorageField ::= "myInt176" [symbol(field_Storage_myInt176)]
    
    syntax StorageField ::= "myInt184" [symbol(field_Storage_myInt184)]
    
    syntax StorageField ::= "myInt192" [symbol(field_Storage_myInt192)]
    
    syntax StorageField ::= "myInt200" [symbol(field_Storage_myInt200)]
    
    syntax StorageField ::= "myInt208" [symbol(field_Storage_myInt208)]
    
    syntax StorageField ::= "myInt216" [symbol(field_Storage_myInt216)]
    
    syntax StorageField ::= "myInt224" [symbol(field_Storage_myInt224)]
    
    syntax StorageField ::= "myInt232" [symbol(field_Storage_myInt232)]
    
    syntax StorageField ::= "myInt240" [symbol(field_Storage_myInt240)]
    
    syntax StorageField ::= "myInt248" [symbol(field_Storage_myInt248)]
    
    syntax StorageField ::= "myInt256" [symbol(field_Storage_myInt256)]
    
    syntax StorageField ::= "myString" [symbol(field_Storage_myString)]
    
    syntax StorageField ::= "myBytes" [symbol(field_Storage_myBytes)]
    
    syntax StorageField ::= "myUint128s" [symbol(field_Storage_myUint128s)]
    
    syntax StorageField ::= "myUint64s" [symbol(field_Storage_myUint64s)]
    
    syntax StorageField ::= "myFoo" [symbol(field_Storage_myFoo)]
    
    syntax StorageField ::= "myFoos" [symbol(field_Storage_myFoos)]
    
    rule  ( #loc ( S2KStorage . myBool ) => 0 )
      
    
    rule  ( #loc ( S2KStorage . myUint8 ) => 0 )
      
    
    rule  ( #loc ( S2KStorage . myUint16 ) => 0 )
      
    
    rule  ( #loc ( S2KStorage . myUint24 ) => 0 )
      
    
    rule  ( #loc ( S2KStorage . myUint32 ) => 0 )
      
    
    rule  ( #loc ( S2KStorage . myUint40 ) => 0 )
      
    
    rule  ( #loc ( S2KStorage . myUint48 ) => 0 )
      
    
    rule  ( #loc ( S2KStorage . myUint56 ) => 0 )
      
    
    rule  ( #loc ( S2KStorage . myUint64 ) => 1 )
      
    
    rule  ( #loc ( S2KStorage . myUint72 ) => 1 )
      
    
    rule  ( #loc ( S2KStorage . myUint80 ) => 1 )
      
    
    rule  ( #loc ( S2KStorage . myUint88 ) => 2 )
      
    
    rule  ( #loc ( S2KStorage . myUint96 ) => 2 )
      
    
    rule  ( #loc ( S2KStorage . myUint104 ) => 3 )
      
    
    rule  ( #loc ( S2KStorage . myUint112 ) => 3 )
      
    
    rule  ( #loc ( S2KStorage . myUint120 ) => 4 )
      
    
    rule  ( #loc ( S2KStorage . myUint128 ) => 4 )
      
    
    rule  ( #loc ( S2KStorage . myUint136 ) => 5 )
      
    
    rule  ( #loc ( S2KStorage . myUint144 ) => 6 )
      
    
    rule  ( #loc ( S2KStorage . myUint152 ) => 7 )
      
    
    rule  ( #loc ( S2KStorage . myUint160 ) => 8 )
      
    
    rule  ( #loc ( S2KStorage . myUint168 ) => 9 )
      
    
    rule  ( #loc ( S2KStorage . myUint176 ) => 10 )
      
    
    rule  ( #loc ( S2KStorage . myUint184 ) => 11 )
      
    
    rule  ( #loc ( S2KStorage . myUint192 ) => 12 )
      
    
    rule  ( #loc ( S2KStorage . myUint200 ) => 13 )
      
    
    rule  ( #loc ( S2KStorage . myUint208 ) => 14 )
      
    
    rule  ( #loc ( S2KStorage . myUint216 ) => 15 )
      
    
    rule  ( #loc ( S2KStorage . myUint224 ) => 16 )
      
    
    rule  ( #loc ( S2KStorage . myUint232 ) => 17 )
      
    
    rule  ( #loc ( S2KStorage . myUint240 ) => 18 )
      
    
    rule  ( #loc ( S2KStorage . myUint248 ) => 19 )
      
    
    rule  ( #loc ( S2KStorage . myUint256 ) => 20 )
      
    
    rule  ( #loc ( S2KStorage . myInt8 ) => 21 )
      
    
    rule  ( #loc ( S2KStorage . myInt16 ) => 21 )
      
    
    rule  ( #loc ( S2KStorage . myInt24 ) => 21 )
      
    
    rule  ( #loc ( S2KStorage . myInt32 ) => 21 )
      
    
    rule  ( #loc ( S2KStorage . myInt40 ) => 21 )
      
    
    rule  ( #loc ( S2KStorage . myInt48 ) => 21 )
      
    
    rule  ( #loc ( S2KStorage . myInt56 ) => 21 )
      
    
    rule  ( #loc ( S2KStorage . myInt64 ) => 22 )
      
    
    rule  ( #loc ( S2KStorage . myInt72 ) => 22 )
      
    
    rule  ( #loc ( S2KStorage . myInt80 ) => 22 )
      
    
    rule  ( #loc ( S2KStorage . myInt88 ) => 23 )
      
    
    rule  ( #loc ( S2KStorage . myInt96 ) => 23 )
      
    
    rule  ( #loc ( S2KStorage . myInt104 ) => 24 )
      
    
    rule  ( #loc ( S2KStorage . myInt112 ) => 24 )
      
    
    rule  ( #loc ( S2KStorage . myInt120 ) => 25 )
      
    
    rule  ( #loc ( S2KStorage . myInt128 ) => 25 )
      
    
    rule  ( #loc ( S2KStorage . myInt136 ) => 26 )
      
    
    rule  ( #loc ( S2KStorage . myInt144 ) => 27 )
      
    
    rule  ( #loc ( S2KStorage . myInt152 ) => 28 )
      
    
    rule  ( #loc ( S2KStorage . myInt160 ) => 29 )
      
    
    rule  ( #loc ( S2KStorage . myInt168 ) => 30 )
      
    
    rule  ( #loc ( S2KStorage . myInt176 ) => 31 )
      
    
    rule  ( #loc ( S2KStorage . myInt184 ) => 32 )
      
    
    rule  ( #loc ( S2KStorage . myInt192 ) => 33 )
      
    
    rule  ( #loc ( S2KStorage . myInt200 ) => 34 )
      
    
    rule  ( #loc ( S2KStorage . myInt208 ) => 35 )
      
    
    rule  ( #loc ( S2KStorage . myInt216 ) => 36 )
      
    
    rule  ( #loc ( S2KStorage . myInt224 ) => 37 )
      
    
    rule  ( #loc ( S2KStorage . myInt232 ) => 38 )
      
    
    rule  ( #loc ( S2KStorage . myInt240 ) => 39 )
      
    
    rule  ( #loc ( S2KStorage . myInt248 ) => 40 )
      
    
    rule  ( #loc ( S2KStorage . myInt256 ) => 41 )
      
    
    rule  ( #loc ( S2KStorage . myString ) => 42 )
      
    
    rule  ( #loc ( S2KStorage . myBytes ) => 43 )
      
    
    rule  ( #loc ( S2KStorage . myUint128s ) => 44 )
      
    
    rule  ( #loc ( S2KStorage . myUint64s ) => 45 )
      
    
    rule  ( #loc ( S2KStorage . myFoo ) => 47 )
      
    
    rule  ( #loc ( S2KStorage . myFoos ) => 49 )
      
    
    syntax Bytes ::= S2KStorageContract "." S2KStorageMethod [function(), symbol(method_Storage)]
    
    syntax S2KStorageMethod ::= "S2KmyBool" "(" ")" [symbol(method_Storage_S2KmyBool_)]
    
    syntax S2KStorageMethod ::= "S2KmyBytes" "(" ")" [symbol(method_Storage_S2KmyBytes_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt104" "(" ")" [symbol(method_Storage_S2KmyInt104_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt112" "(" ")" [symbol(method_Storage_S2KmyInt112_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt120" "(" ")" [symbol(method_Storage_S2KmyInt120_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt128" "(" ")" [symbol(method_Storage_S2KmyInt128_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt136" "(" ")" [symbol(method_Storage_S2KmyInt136_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt144" "(" ")" [symbol(method_Storage_S2KmyInt144_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt152" "(" ")" [symbol(method_Storage_S2KmyInt152_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt16" "(" ")" [symbol(method_Storage_S2KmyInt16_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt160" "(" ")" [symbol(method_Storage_S2KmyInt160_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt168" "(" ")" [symbol(method_Storage_S2KmyInt168_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt176" "(" ")" [symbol(method_Storage_S2KmyInt176_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt184" "(" ")" [symbol(method_Storage_S2KmyInt184_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt192" "(" ")" [symbol(method_Storage_S2KmyInt192_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt200" "(" ")" [symbol(method_Storage_S2KmyInt200_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt208" "(" ")" [symbol(method_Storage_S2KmyInt208_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt216" "(" ")" [symbol(method_Storage_S2KmyInt216_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt224" "(" ")" [symbol(method_Storage_S2KmyInt224_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt232" "(" ")" [symbol(method_Storage_S2KmyInt232_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt24" "(" ")" [symbol(method_Storage_S2KmyInt24_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt240" "(" ")" [symbol(method_Storage_S2KmyInt240_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt248" "(" ")" [symbol(method_Storage_S2KmyInt248_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt256" "(" ")" [symbol(method_Storage_S2KmyInt256_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt32" "(" ")" [symbol(method_Storage_S2KmyInt32_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt40" "(" ")" [symbol(method_Storage_S2KmyInt40_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt48" "(" ")" [symbol(method_Storage_S2KmyInt48_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt56" "(" ")" [symbol(method_Storage_S2KmyInt56_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt64" "(" ")" [symbol(method_Storage_S2KmyInt64_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt72" "(" ")" [symbol(method_Storage_S2KmyInt72_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt8" "(" ")" [symbol(method_Storage_S2KmyInt8_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt80" "(" ")" [symbol(method_Storage_S2KmyInt80_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt88" "(" ")" [symbol(method_Storage_S2KmyInt88_)]
    
    syntax S2KStorageMethod ::= "S2KmyInt96" "(" ")" [symbol(method_Storage_S2KmyInt96_)]
    
    syntax S2KStorageMethod ::= "S2KmyString" "(" ")" [symbol(method_Storage_S2KmyString_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint104" "(" ")" [symbol(method_Storage_S2KmyUint104_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint112" "(" ")" [symbol(method_Storage_S2KmyUint112_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint120" "(" ")" [symbol(method_Storage_S2KmyUint120_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint128" "(" ")" [symbol(method_Storage_S2KmyUint128_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint136" "(" ")" [symbol(method_Storage_S2KmyUint136_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint144" "(" ")" [symbol(method_Storage_S2KmyUint144_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint152" "(" ")" [symbol(method_Storage_S2KmyUint152_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint16" "(" ")" [symbol(method_Storage_S2KmyUint16_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint160" "(" ")" [symbol(method_Storage_S2KmyUint160_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint168" "(" ")" [symbol(method_Storage_S2KmyUint168_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint176" "(" ")" [symbol(method_Storage_S2KmyUint176_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint184" "(" ")" [symbol(method_Storage_S2KmyUint184_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint192" "(" ")" [symbol(method_Storage_S2KmyUint192_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint200" "(" ")" [symbol(method_Storage_S2KmyUint200_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint208" "(" ")" [symbol(method_Storage_S2KmyUint208_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint216" "(" ")" [symbol(method_Storage_S2KmyUint216_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint224" "(" ")" [symbol(method_Storage_S2KmyUint224_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint232" "(" ")" [symbol(method_Storage_S2KmyUint232_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint24" "(" ")" [symbol(method_Storage_S2KmyUint24_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint240" "(" ")" [symbol(method_Storage_S2KmyUint240_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint248" "(" ")" [symbol(method_Storage_S2KmyUint248_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint256" "(" ")" [symbol(method_Storage_S2KmyUint256_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint32" "(" ")" [symbol(method_Storage_S2KmyUint32_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint40" "(" ")" [symbol(method_Storage_S2KmyUint40_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint48" "(" ")" [symbol(method_Storage_S2KmyUint48_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint56" "(" ")" [symbol(method_Storage_S2KmyUint56_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint64" "(" ")" [symbol(method_Storage_S2KmyUint64_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint72" "(" ")" [symbol(method_Storage_S2KmyUint72_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint8" "(" ")" [symbol(method_Storage_S2KmyUint8_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint80" "(" ")" [symbol(method_Storage_S2KmyUint80_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint88" "(" ")" [symbol(method_Storage_S2KmyUint88_)]
    
    syntax S2KStorageMethod ::= "S2KmyUint96" "(" ")" [symbol(method_Storage_S2KmyUint96_)]
    
    syntax S2KStorageMethod ::= "S2KsetMyBool" "(" Int ":" "bool" ")" [symbol(method_Storage_S2KsetMyBool_bool)]
    
    rule  ( S2KStorage . S2KmyBool ( ) => #abiCallData ( "myBool" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyBytes ( ) => #abiCallData ( "myBytes" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt104 ( ) => #abiCallData ( "myInt104" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt112 ( ) => #abiCallData ( "myInt112" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt120 ( ) => #abiCallData ( "myInt120" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt128 ( ) => #abiCallData ( "myInt128" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt136 ( ) => #abiCallData ( "myInt136" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt144 ( ) => #abiCallData ( "myInt144" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt152 ( ) => #abiCallData ( "myInt152" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt16 ( ) => #abiCallData ( "myInt16" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt160 ( ) => #abiCallData ( "myInt160" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt168 ( ) => #abiCallData ( "myInt168" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt176 ( ) => #abiCallData ( "myInt176" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt184 ( ) => #abiCallData ( "myInt184" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt192 ( ) => #abiCallData ( "myInt192" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt200 ( ) => #abiCallData ( "myInt200" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt208 ( ) => #abiCallData ( "myInt208" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt216 ( ) => #abiCallData ( "myInt216" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt224 ( ) => #abiCallData ( "myInt224" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt232 ( ) => #abiCallData ( "myInt232" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt24 ( ) => #abiCallData ( "myInt24" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt240 ( ) => #abiCallData ( "myInt240" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt248 ( ) => #abiCallData ( "myInt248" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt256 ( ) => #abiCallData ( "myInt256" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt32 ( ) => #abiCallData ( "myInt32" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt40 ( ) => #abiCallData ( "myInt40" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt48 ( ) => #abiCallData ( "myInt48" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt56 ( ) => #abiCallData ( "myInt56" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt64 ( ) => #abiCallData ( "myInt64" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt72 ( ) => #abiCallData ( "myInt72" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt8 ( ) => #abiCallData ( "myInt8" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt80 ( ) => #abiCallData ( "myInt80" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt88 ( ) => #abiCallData ( "myInt88" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyInt96 ( ) => #abiCallData ( "myInt96" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyString ( ) => #abiCallData ( "myString" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint104 ( ) => #abiCallData ( "myUint104" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint112 ( ) => #abiCallData ( "myUint112" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint120 ( ) => #abiCallData ( "myUint120" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint128 ( ) => #abiCallData ( "myUint128" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint136 ( ) => #abiCallData ( "myUint136" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint144 ( ) => #abiCallData ( "myUint144" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint152 ( ) => #abiCallData ( "myUint152" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint16 ( ) => #abiCallData ( "myUint16" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint160 ( ) => #abiCallData ( "myUint160" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint168 ( ) => #abiCallData ( "myUint168" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint176 ( ) => #abiCallData ( "myUint176" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint184 ( ) => #abiCallData ( "myUint184" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint192 ( ) => #abiCallData ( "myUint192" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint200 ( ) => #abiCallData ( "myUint200" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint208 ( ) => #abiCallData ( "myUint208" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint216 ( ) => #abiCallData ( "myUint216" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint224 ( ) => #abiCallData ( "myUint224" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint232 ( ) => #abiCallData ( "myUint232" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint24 ( ) => #abiCallData ( "myUint24" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint240 ( ) => #abiCallData ( "myUint240" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint248 ( ) => #abiCallData ( "myUint248" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint256 ( ) => #abiCallData ( "myUint256" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint32 ( ) => #abiCallData ( "myUint32" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint40 ( ) => #abiCallData ( "myUint40" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint48 ( ) => #abiCallData ( "myUint48" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint56 ( ) => #abiCallData ( "myUint56" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint64 ( ) => #abiCallData ( "myUint64" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint72 ( ) => #abiCallData ( "myUint72" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint8 ( ) => #abiCallData ( "myUint8" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint80 ( ) => #abiCallData ( "myUint80" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint88 ( ) => #abiCallData ( "myUint88" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KmyUint96 ( ) => #abiCallData ( "myUint96" , .TypedArgs ) )
      
    
    rule  ( S2KStorage . S2KsetMyBool ( V0_newBool : bool ) => #abiCallData ( "setMyBool" , #bool ( V0_newBool ) , .TypedArgs ) )
       ensures #rangeBool ( V0_newBool )
      
    
    rule  ( selector ( "myBool()" ) => 1844366782 )
      
    
    rule  ( selector ( "myBytes()" ) => 1898923522 )
      
    
    rule  ( selector ( "myInt104()" ) => 3769717327 )
      
    
    rule  ( selector ( "myInt112()" ) => 1361874479 )
      
    
    rule  ( selector ( "myInt120()" ) => 2449055983 )
      
    
    rule  ( selector ( "myInt128()" ) => 1171335287 )
      
    
    rule  ( selector ( "myInt136()" ) => 1921575036 )
      
    
    rule  ( selector ( "myInt144()" ) => 3031097123 )
      
    
    rule  ( selector ( "myInt152()" ) => 2183556540 )
      
    
    rule  ( selector ( "myInt16()" ) => 1716680015 )
      
    
    rule  ( selector ( "myInt160()" ) => 2880209597 )
      
    
    rule  ( selector ( "myInt168()" ) => 64341664 )
      
    
    rule  ( selector ( "myInt176()" ) => 2473962370 )
      
    
    rule  ( selector ( "myInt184()" ) => 933893415 )
      
    
    rule  ( selector ( "myInt192()" ) => 3902309668 )
      
    
    rule  ( selector ( "myInt200()" ) => 2002425666 )
      
    
    rule  ( selector ( "myInt208()" ) => 103289144 )
      
    
    rule  ( selector ( "myInt216()" ) => 4128675402 )
      
    
    rule  ( selector ( "myInt224()" ) => 1054187961 )
      
    
    rule  ( selector ( "myInt232()" ) => 1299236373 )
      
    
    rule  ( selector ( "myInt24()" ) => 180311096 )
      
    
    rule  ( selector ( "myInt240()" ) => 193999351 )
      
    
    rule  ( selector ( "myInt248()" ) => 1172761411 )
      
    
    rule  ( selector ( "myInt256()" ) => 930181817 )
      
    
    rule  ( selector ( "myInt32()" ) => 652237467 )
      
    
    rule  ( selector ( "myInt40()" ) => 2688242429 )
      
    
    rule  ( selector ( "myInt48()" ) => 294352996 )
      
    
    rule  ( selector ( "myInt56()" ) => 1426573562 )
      
    
    rule  ( selector ( "myInt64()" ) => 1826080093 )
      
    
    rule  ( selector ( "myInt72()" ) => 1358599558 )
      
    
    rule  ( selector ( "myInt8()" ) => 1855112094 )
      
    
    rule  ( selector ( "myInt80()" ) => 2607424367 )
      
    
    rule  ( selector ( "myInt88()" ) => 4237602313 )
      
    
    rule  ( selector ( "myInt96()" ) => 1140454608 )
      
    
    rule  ( selector ( "myString()" ) => 1227618840 )
      
    
    rule  ( selector ( "myUint104()" ) => 2562905582 )
      
    
    rule  ( selector ( "myUint112()" ) => 2312572821 )
      
    
    rule  ( selector ( "myUint120()" ) => 3068336510 )
      
    
    rule  ( selector ( "myUint128()" ) => 2127339145 )
      
    
    rule  ( selector ( "myUint136()" ) => 4173203025 )
      
    
    rule  ( selector ( "myUint144()" ) => 4035797251 )
      
    
    rule  ( selector ( "myUint152()" ) => 360190854 )
      
    
    rule  ( selector ( "myUint16()" ) => 2385363659 )
      
    
    rule  ( selector ( "myUint160()" ) => 1383333939 )
      
    
    rule  ( selector ( "myUint168()" ) => 1009580974 )
      
    
    rule  ( selector ( "myUint176()" ) => 2404840593 )
      
    
    rule  ( selector ( "myUint184()" ) => 407000813 )
      
    
    rule  ( selector ( "myUint192()" ) => 229692326 )
      
    
    rule  ( selector ( "myUint200()" ) => 161744886 )
      
    
    rule  ( selector ( "myUint208()" ) => 3633238487 )
      
    
    rule  ( selector ( "myUint216()" ) => 3288289344 )
      
    
    rule  ( selector ( "myUint224()" ) => 1934302803 )
      
    
    rule  ( selector ( "myUint232()" ) => 2569544816 )
      
    
    rule  ( selector ( "myUint24()" ) => 946970341 )
      
    
    rule  ( selector ( "myUint240()" ) => 2223697895 )
      
    
    rule  ( selector ( "myUint248()" ) => 1057386179 )
      
    
    rule  ( selector ( "myUint256()" ) => 2816200220 )
      
    
    rule  ( selector ( "myUint32()" ) => 302881183 )
      
    
    rule  ( selector ( "myUint40()" ) => 2133099158 )
      
    
    rule  ( selector ( "myUint48()" ) => 2035097050 )
      
    
    rule  ( selector ( "myUint56()" ) => 3099541938 )
      
    
    rule  ( selector ( "myUint64()" ) => 1056558741 )
      
    
    rule  ( selector ( "myUint72()" ) => 329837525 )
      
    
    rule  ( selector ( "myUint8()" ) => 3802444463 )
      
    
    rule  ( selector ( "myUint80()" ) => 2279010072 )
      
    
    rule  ( selector ( "myUint88()" ) => 101404465 )
      
    
    rule  ( selector ( "myUint96()" ) => 2823172538 )
      
    
    rule  ( selector ( "setMyBool(bool)" ) => 3944427737 )
      

endmodule

module STORAGE-VERIFICATION
    imports public Storage-CONTRACT
    
    

endmodule


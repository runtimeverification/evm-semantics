name: 'Update Version'
on:
  push:
    branches:
      - '_update-deps/runtimeverification/blockchain-k-plugin'
      - '_update-deps/runtimeverification/k'
      - '_update-deps/runtimeverification/rv-nix-tools'
  workflow_dispatch:
# Stop in progress workflows on the same branch and same workflow to use latest committed code
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  update-versions:
    name: 'Update Dependency Versions'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
      - name: 'Configure GitHub user'
        run: |
          git config user.name devops
          git config user.email devops@runtimeverification.com
      - name: 'Get uv release'
        id: uv_release
        run: |
          echo uv_version=$(cat deps/uv_release) >> "${GITHUB_OUTPUT}"
      - name: 'Install uv'
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ steps.uv_release.outputs.uv_version }}
      - name: 'Update pyk release tag'
        run: |
          K_VERSION=$(cat deps/k_release)
          sed -i 's!    "kframework==[0-9\.]*,"!    "kframework=='${K_VERSION}'",!' kevm-pyk/pyproject.toml
          uv --project kevm-pyk lock --upgrade
          git add kevm-pyk/ && git commit -m "kevm-pyk/: sync uv files pyk version ${K_VERSION}" || true
      - name: 'Update plugin release file'
        run: |
          BKP_VERSION=$(git -C kevm-pyk/src/kevm_pyk/kproj/plugin rev-parse HEAD)
          echo ${BKP_VERSION} > deps/blockchain-k-plugin_release
          git add deps/blockchain-k-plugin_release && git commit -m "deps/blockchain-k-plugin_release: sync release file version ${BKP_VERSION}" || true
      - name: 'Install Nix/Cachix'
        uses: cachix/install-nix-action@v19
        with:
          install_url: https://releases.nixos.org/nix/nix-2.13.3/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: k-framework
          authToken: ${{ secrets.CACHIX_PUBLIC_TOKEN }}
      - name: 'Update nix flake inputs'
        run: |
          K_VERSION=v$(cat deps/k_release)
          BKP_VERSION=$(cat deps/blockchain-k-plugin_release)
          RV_NIX_TOOLS_VERSION=$(cat deps/rv-nix-tools)
          sed -i 's!    k-framework.url = "github:runtimeverification/k/[v0-9\.]*"!    k-framework.url = "github:runtimeverification/k/'"${K_VERSION}"'"!' flake.nix
          sed -i 's!        "github:runtimeverification/blockchain-k-plugin/[0-9a-f]*"!        "github:runtimeverification/blockchain-k-plugin/'"${BKP_VERSION}"'"!' flake.nix
          sed -i 's!    rv-nix-tools.url = "github:runtimeverification/rv-nix-tools/[a-z0-9\.]*"!    rv-nix-tools.url = "github:runtimeverification/rv-nix-tools/'"${RV_NIX_TOOLS_VERSION}"'"!' flake.nix
          nix run .#update-from-submodules
          nix flake update
          git add flake.nix flake.lock && git commit -m 'flake.{nix,lock}: update Nix derivations' || true
      - name: 'Push updates'
        run: git push
